{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2019-09-10-graphql/","result":{"data":{"markdownRemark":{"id":"b322dd1e-1364-5bb7-927e-406b515ad66b","html":"<h1 id=\"graphql-이란\" style=\"position:relative;\"><a href=\"#graphql-%EC%9D%B4%EB%9E%80\" aria-label=\"graphql 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL 이란?</h1>\n<ul>\n<li>Facebook에서 만든 <strong>단일 End-Point의 쿼리 언어</strong>.</li>\n<li>2015년에 처음으로 공개되었고, 2016년 10월에 Stable 버전이 출시.</li>\n<li><strong>API를 요청하는 URL은 하나</strong>, 클라이언트에서 필요한 데이터를 쿼리로 통해 조회.</li>\n<li>REST API와는 다른 새로운 API 디자인 아키텍처.</li>\n<li><strong>GraphQL의 핵심은, 리소스를 url이 아니라 Query를 통해 표현</strong>하는 것이다.</li>\n<li>Github, Facebook, Pinterest에서 주로 사용 중.</li>\n</ul>\n<h2 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h2>\n<ul>\n<li>데이터의 변동에 따라 API를 새로 만들 필요가 없어짐.</li>\n<li>Web, Mobile API를 별도로 만들 필요가 없음.</li>\n<li><strong>OverFetching</strong>, <strong>UnderFetching</strong> 이슈 해결.</li>\n<li>기존 데이터베이스 위에 <strong>(GraphQL)스키마</strong>만 추가해서 사용 가능.</li>\n</ul>\n<h3 id=\"overfetching\" style=\"position:relative;\"><a href=\"#overfetching\" aria-label=\"overfetching permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OverFetching</h3>\n<ul>\n<li>내가 필요한 정보보다 많은 정보를 서버한테 받는 내용</li>\n<li>Ex) 사용자 정보 조회 시, 내가 필요한건 이름과 이메일인데 관련된 성별, 나이 등도 같이 전달 되어 오는 경우.</li>\n</ul>\n<h3 id=\"underfetching\" style=\"position:relative;\"><a href=\"#underfetching\" aria-label=\"underfetching permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UnderFetching</h3>\n<ul>\n<li>페이지에서 필요한 정보를 표시하기 위해 클라이언트에서 여러 Rest API를 호출하는 경우</li>\n</ul>\n<h2 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h2>\n<ul>\n<li>클라이언트 코드량 증가</li>\n<li>서버에서 오는 Response 양은 감소하지만 쿼리를 보내는 Client의 Request양은 증가.</li>\n</ul>\n<h2 id=\"구현\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84\" aria-label=\"구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현</h2>\n<h4 id=\"schema-server\" style=\"position:relative;\"><a href=\"#schema-server\" aria-label=\"schema server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Schema (Server)</h4>\n<ul>\n<li>클라이언트에게 보내거나 받을 Data의 설명</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">type Photo {\n    id: Int! // !는 사용의 강제성을 부여.\n    albumId: Int\n    title: String\n    url: String\n    thumbnailUrl: String\n}\n\ntype Album {\n    id: Int!\n    userId: Int!\n    title: String!\n}\n\ntype Query{\n    photos(albumId: Int, current: Int, limit: Int): [Photo]\n    albums(current: Int, limit: Int): [Album]\n}</code></pre></div>\n<h4 id=\"resolver-server\" style=\"position:relative;\"><a href=\"#resolver-server\" aria-label=\"resolver server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resolver (Server)</h4>\n<ul>\n<li>쿼리 요청의 해결(resolve), 응답해주는 중간 역할</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const resolvers = {\n  Query: {\n    photos: (context, { albumId, current, limit }) =&gt; getPhotos(albumId, current, limit),\n    albums: (context, { current, limit }) =&gt; getAlbums(current, limit),\n};\n\nexport default resolvers;</code></pre></div>\n<h4 id=\"queries-client\" style=\"position:relative;\"><a href=\"#queries-client\" aria-label=\"queries client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queries (Client)</h4>\n<ul>\n<li>발송할 쿼리 내용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const ALBUM_LIST = gql`\n    {\n        albums(current: 1, limit: 10) {\n            id\n            userId\n            title\n        }\n    }\n`;\n\nexport const PHOTO_LIST = gql`\n    query photos($albumId: Int!) {\n        photos(albumId: $albumId, current: 1, limit: 10) {\n            id\n            albumId\n            title\n            url\n        }\n    }\n`;</code></pre></div>\n<h4 id=\"request-query-with-react-hooks-client\" style=\"position:relative;\"><a href=\"#request-query-with-react-hooks-client\" aria-label=\"request query with react hooks client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request Query with React-Hooks (Client)</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;;\nimport { useQuery } from &#39;@apollo/react-hooks&#39;;\nimport { ALBUM_LIST } from &#39;client/queries&#39;;\nimport Album from &#39;client/components/Album&#39;;\n\nconst Home = () =&gt; {\n  const { loading, error, data } = useQuery(ALBUM_LIST);\n\n  if (loading) {\n    return &#39;Loading&#39;;\n  }\n\n  if (error) {\n    return &#39;Loading Error&#39;;\n  }\n\n  return (\n    &lt;div&gt;\n      {\n        data &amp;&amp; data.albums &amp;&amp; data.albums.map((item) =&gt; {\n          return &lt;Album key={item.id} albumId={item.id} title={item.title}/&gt;;\n        })\n      }\n    &lt;/div&gt;);\n};\n\nexport default Home;</code></pre></div>\n<h3 id=\"소스-원본\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-%EC%9B%90%EB%B3%B8\" aria-label=\"소스 원본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스 원본</h3>\n<ul>\n<li><a href=\"https://github.com/devhyunseok/album-react-graphql\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">album-react-graphql</a></li>\n</ul>\n<h3 id=\"graphql-yoga\" style=\"position:relative;\"><a href=\"#graphql-yoga\" aria-label=\"graphql yoga permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/prisma/graphql-yoga\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Graphql-yoga</a></h3>\n<ul>\n<li>GraphQL을 빠르게 시작할수 있는 GraphQL 서버 템플릿.</li>\n</ul>\n<h3 id=\"react-apollo\" style=\"position:relative;\"><a href=\"#react-apollo\" aria-label=\"react apollo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.apollographql.com/docs/react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React-Apollo</a></h3>\n<ul>\n<li>React의 GraphQL 상태 관리 라이브러리.</li>\n</ul>\n<h2 id=\"참고-문언\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%AC%B8%EC%96%B8\" aria-label=\"참고 문언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 문언</h2>\n<ul>\n<li><a href=\"https://graphql.org/learn/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공식 문서</a></li>\n<li><a href=\"https://graphql-kr.github.io/learn/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">한글화 공식 문서</a></li>\n<li><a href=\"https://samslow.me/development/2019/07/31/GraphQL%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%28feat.-%EB%AC%B4%ED%95%9C%ED%95%9C-%EA%B3%B5%EA%B0%84-%EC%A0%80-%EB%84%88%EB%A8%B8%EB%A1%9C%29/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GraphQL 이란 무엇인가</a></li>\n</ul>","fields":{"slug":"/posts/2019-09-10-graphql/","tagSlugs":["/tag/tech/"]},"frontmatter":{"date":"2019-09-10T13:00:00.121Z","description":"","tags":["Tech"],"title":"GraphQL 이란?","socialImage":null}}},"pageContext":{"slug":"/posts/2019-09-10-graphql/"}},"staticQueryHashes":["251939775","401334301","825871152"]}